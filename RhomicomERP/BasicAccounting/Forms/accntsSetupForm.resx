<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADM
        CAAAAk1TRnQBSQFMAwEBAAEYAQABGAEAARkBAAEZAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABZAMA
        ARkDAAEBAQABIAUAARABJxYAAwQBBgMUARwDHQEqAyIBMgMmATkDKwFCAy0BRQMuAUcDMwFRAzQBVAM0
        AVQDNAFUAzQBVAM0AVQDMwFTAy8BSgMtAUUDLAFEAycBOwMjATQDHwEsAxgBIQMIAQv/ADUAAw0BEQM1
        AVYDSAGCA1YBowNaAacDZAG6A2oBwwNpAcQDbwHKA3YB1QN4AdcDeAHXA3gB1wN3AdYDbwHMA2wBxgNq
        AcMDZwG/A10BrQNVAZ8DTAGJAzwBZQMYASH/ADUAAwEBAgMJAQwDDQESA1IBzgNGAX4DGQEjAxYBHwMY
        ASEDGAEiAx4BKwMfAS0DHwEtAx8BLQMfASwDGQEjAxgBIQMYASEDFgEfAxIBGQMRARcDDgETAwoBDgMD
        AQT/AEEAA1ABuwMbAf8DSgHKAyQBNgMLAQ8DAAEB/wB5AANMAZYCDwEOAf8BIQEoASsB/wGLAagBsAH/
        AWEBZQFnAbADMwFTAwoBDv8AdQADQAFwAVUBbAF4Af8BlAG6AcwB/wG7AeQB9QH/Ab8B5QHzAf8BogG6
        Ab8B7QFqAm4BuQMzAVH/AHEAAzEBTQGlAdkB8wH/AaoB2QHxAf8BsgHdAfIB/wG5AeAB8wH/AcEB5gHz
        Af8B0wHtAfUB/wGGAbYByQHxAzcBWv8AbQADHgErAZ0B0QHvAf8BpQHVAe8B/wGtAdsB8AH/AbQB3gHy
        Af8BrgHeAfMB/wF2AcwB8gH/AUEBugHuAf8BUQFwAXsBxwMaAST/AGkAAxQBHAGSAb4B2QH4AaEB0gHu
        Af8BrAHZAfEB/wGQAdEB8QH/AVYBwQHvAf8BWwHDAfIB/wFRAcAB8QH/AUABtQHkAf0BTAFSAVMBlAMF
        AQf/AGUAAxIBGQF9AZYBqAHjAY4BzAHtAf8BWQHDAe4B/wFwAcgB9QH/AUgBvQHvAf8BPQG5AewB/wFf
        AcMB8wH/AUYBvAHvAf8BPQGiAcoB9AMyAVD/AGUAAw0BEgFgAW8BdwHCATYBtgHrAf8BBwGoAeMB/wFi
        AcQB8gH/AVgBwAHwAf8BMwG2AeoB/wFCAboB7gH/AVABvgHwAf8BOgG4AesB/wEnAawB4gH+AxABFv8A
        YQADAgEDAjgBOQFdAVQBnwG+Ae8BLQG1AeoB/wEkAbEB6AH/AVkBwgHxAf8BQwG7Ae4B/wEjAbEB6AH/
        AUUBuwHuAf8BQwG7Ae4B/wEtAbQB6gH/AVABZAFrAbcDEAEV/wBhAAMMARABUwFaAVwBowFLAbcB6QH+
        ASgBswHpAf8BOAG4AesB/wFNAb4B7wH/AS8BtQHrAf8BJAGyAegB/wFEAbsB7gH/ATcBtwHrAf8BLgGd
        AcoB9QFBAkIBcwMDAQT/AGEAAw8BFAFiAa4B0wH2AUEBugHtAf8BIQGwAegB/wFIAb0B7wH/AToBuAHt
        Af8BGgGuAeYB/wEuAbQB6gH/AT8BugHtAf8BKwGzAeoB/wE4AY0BqgHnASECIgEx/wBlAAMqAUEBXgGq
        Ac0B8wE6AbgB7AH/ASQBsQHnAf8BRwG8Ae4B/wEmAbMB6QH/AQ4BqwHkAf8BPQG5Ae0B/wE0AbcB6wH/
        AR4BsAHnAf8BTgFkAWsBtwMHAQn/AGUAAUgBSgFLAYMBVAG8AegB/QEyAbYB6wH/ASsBtAHqAf8BMgG2
        AesB/wETAawB5QH/AREBrAHlAf8BOQG4AewB/wEoAbMB6QH/ARIBrAHlAf8BRwFKAUsBhf8AZQADEgEZ
        AVkBZAFsAbYBUAG/AfAB/wEuAbUB6gH/ASsBtAHpAf8BHwGwAegB/wEIAaoB5AH/ARoBrwHmAf8BMQG2
        AewB/wESAa4B6AH/ATMBogHHAfcDPwFr/wBlAAMwAUsBZgGaAbMB6AFKAbsB7gH/AS0BtAHqAf8BJQGy
        AekB/wEMAaoB5AH/AQoBqwHkAf8BHgGxAegB/wFvAb4B2wH/Ad0BzgHGAf8BgAF/AYAB0AMeASv/AGUA
        AUkBSwFMAYYBZAHFAfQB/wFCAboB7QH/ASoBtAHqAf8BDwGsAeYB/wEvAbUB5QH/AZ4B0gHhAf8B2gHX
        AdsB/wKVAcQB/wIeAZYB/QJIAUsBiQMGAQj/AGEAAwkBDAFbAWYBbAG2AVwBwwHzAf8BPAG5Ae0B/wFy
        AcQB5QH/AcwB4AHkAf8BxQHCAdUB/wJTAawB/wIHAZEB/wINAZgB/wIrAYkB7gMgAS7/AGUAAxYBHgFz
        AZgBrQHlAbIBzgHbAf8C3wHXAf8BmwGaAcAB/wIYAZUB/wIMAZUB/wIPAZsB/wIPAZ4B/wIXAasB/wMd
        ASn/AGUAAwIBAwNDAXQBsgGwAbQB+QJUAacB/wICAY4B/wINAZgB/wIQAZ0B/wITAZwB/gJCAYAB3QM3
        AVsDAgED/wBpAAMVAR0CUQFdAa4CDgGTAf0CDQGaAf8CDwGeAf8CHgGjAfoCTQFYAaIDJAE2/wB1AAMb
        ASYCMwGUAe4CDwGhAf8CQQGHAeEDOgFhAwoBDv8AfQADFwEgAkcBSgGEAxoBJf8ATQABQgFNAT4HAAE+
        AwABKAMAAWQDAAEZAwABAQEAAQEFAAGQAQEWAAP/AQABgAIAAYAMAAGAAgABgAwAAYACAAGADAAB8AE/
        Af8BgAwAAfABHwH/AYAMAAHwAQ8B/wGADAAB8AEHAf8BgAwAAfABAwH/AYAMAAHwAQEB/wGADAAB8AEB
        Af8BgAwAAfABAAH/AYAMAAHwAQABfwGADAAB+AEAAT8BgAwAAfwBAAE/AYAMAAH+AQABHwGADAAB/wEA
        AR8BgAwAAf8BAAEPAYAMAAH/AYABBwGADAAB/wHAAQMBgAwAAf8BwAEDAYAMAAH/AeABAwGADAAB/wHg
        AQMBgAwAAf8B8AEPAYAMAAH/AfgBHwGADAAB/wH8AX8BgAwACw==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
</root>